{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\React\\\\hackathon2022-HARD\\\\frontend\\\\src\\\\Pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button, InputAdornment, Typography, makeStyles, Box, Grid } from \"@material-ui/core\";\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\nimport { VpnKeyRounded } from '@material-ui/icons';\nimport ArrowRightRoundedIcon from '@material-ui/icons/ArrowRightRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  text: {\n    marginTop: 20,\n    marginBottom: 130,\n    display: 'block'\n  },\n  userField: {\n    marginBottom: 10,\n    display: 'block'\n  },\n  passwordField: {\n    marginBottom: 45,\n    display: 'block'\n  },\n  button: {\n    borderRadius: 10\n  }\n});\nexport default function Login() {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [username, setUser] = useState('');\n  const [password, setPass] = useState('');\n  const [userError, setUserError] = useState(false);\n  const [passError, setPassError] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setUserError(false);\n    setPassError(false);\n\n    if (username === '') {\n      setUserError(true);\n    }\n\n    if (password === '') {\n      setPassError(true);\n    }\n\n    if (username && password) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"user\": username,\n          \"pass\": password\n        })\n      };\n      fetch(\"/login/\", requestOptions).then(response => response.json()).then(data => {\n        // console.log(data.output)\n        if (data.output === \"User Found\") {\n          // Update our user status\n          setGlobalUser(username);\n          setLoginStatus(\"Log Out\");\n          notify(true);\n        } else {\n          notify(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      }); //we have to then return the profile depending on the log in information here.\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      id: \"welcome-text\",\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        className: classes.text,\n        children: \"Welcome Back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        id: \"server-response\",\n        variant: \"h2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        id: \"user-input\",\n        alignItems: \"center\",\n        px: 55,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.userField,\n          label: \"Username\",\n          color: \"secondary\",\n          onChange: e => setUser(e.target.value),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(AccountBoxRoundedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this),\n            style: {\n              fontSize: 24\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: 22\n            }\n          },\n          required: true,\n          fullWidth: true,\n          error: userError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        id: \"pass-input\",\n        alignItems: \"center\",\n        px: 55,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.passwordField,\n          type: \"password\",\n          label: \"Password\",\n          color: \"secondary\",\n          onChange: e => setPass(e.target.value),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(VpnKeyRounded, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this),\n            style: {\n              fontSize: 24\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: 22\n            }\n          },\n          autoComplete: \"current-password\",\n          required: true,\n          fullWidth: true,\n          error: passError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        id: \"login-button/signup\",\n        container: true,\n        spacing: 2,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          alignContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"login\",\n            className: classes.button,\n            variant: \"contained\",\n            type: \"submit\",\n            endIcon: /*#__PURE__*/_jsxDEV(ArrowRightRoundedIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 38\n            }, this),\n            style: {\n              fontSize: 18,\n              maxHeight: 30\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          alignContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"signup\",\n            className: classes.button,\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(ArrowRightRoundedIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 38\n            }, this),\n            style: {\n              fontSize: 18,\n              maxHeight: 30\n            },\n            onClick: () => navigate('/SignUp'),\n            children: \"New User?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"l+6L00rwy0kIXOp1vZCS8EaaIr4=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/johnn/React/hackathon2022-HARD/frontend/src/Pages/Login.js"],"names":["React","useState","useNavigate","TextField","Button","InputAdornment","Typography","makeStyles","Box","Grid","AccountBoxRoundedIcon","VpnKeyRounded","ArrowRightRoundedIcon","useStyles","text","marginTop","marginBottom","display","userField","passwordField","button","borderRadius","Login","classes","navigate","username","setUser","password","setPass","userError","setUserError","passError","setPassError","handleSubmit","event","preventDefault","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","output","setGlobalUser","setLoginStatus","notify","catch","error","console","log","e","target","value","startAdornment","style","fontSize","maxHeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { TextField, Button, InputAdornment, Typography, makeStyles, Box, Grid } from \"@material-ui/core\";\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded'\r\nimport { VpnKeyRounded } from '@material-ui/icons';\r\nimport ArrowRightRoundedIcon from '@material-ui/icons/ArrowRightRounded';\r\n\r\nconst useStyles = makeStyles({\r\n    text: {\r\n        marginTop: 20,\r\n        marginBottom: 130,\r\n        display: 'block',\r\n    },\r\n\r\n    userField: {\r\n        marginBottom: 10,\r\n        display: 'block',\r\n    },\r\n\r\n    passwordField: {\r\n        marginBottom: 45,\r\n        display: 'block',\r\n    },\r\n\r\n    button: {\r\n        borderRadius: 10,\r\n    },\r\n})\r\n\r\nexport default function Login() {  \r\n    const classes = useStyles()\r\n    const navigate = useNavigate()\r\n    const [username, setUser] = useState('')\r\n    const [password, setPass] = useState('')\r\n    const [userError, setUserError] = useState(false)\r\n    const [passError, setPassError] = useState(false)\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        setUserError(false)\r\n        setPassError(false)\r\n\r\n        if (username === '') {\r\n            setUserError(true)\r\n        }\r\n\r\n        if (password === '') {\r\n            setPassError(true)\r\n        }\r\n\r\n        if (username && password) {\r\n\r\n            const requestOptions = {\r\n                method: \"POST\",\r\n                headers: { 'Content-Type': 'application/json' },\r\n\r\n                body: JSON.stringify({ \"user\": username, \"pass\": password })\r\n            }\r\n\r\n            fetch(\"/login/\", requestOptions)\r\n                .then(response =>\r\n                    response.json()\r\n                )\r\n                .then(data => {\r\n                    // console.log(data.output)\r\n                    if (data.output === \"User Found\") {\r\n                        // Update our user status\r\n                        setGlobalUser(username)\r\n                        setLoginStatus(\"Log Out\")\r\n                        notify(true)\r\n                    } else {\r\n                        notify(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n            //we have to then return the profile depending on the log in information here.\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <Box id=\"container\">\r\n            <Box id=\"welcome-text\" textAlign=\"center\">\r\n                <Typography\r\n                    variant='h1'\r\n                    className={classes.text}\r\n                >\r\n                    Welcome Back!\r\n                </Typography>\r\n\r\n                <Typography id=\"server-response\" variant=\"h2\">\r\n                    {}\r\n                </Typography>\r\n            </Box>\r\n\r\n            <form noValidate autoComplete='off' onSubmit={handleSubmit}>\r\n                <Box id=\"user-input\" alignItems=\"center\" px={55}>\r\n                    <TextField\r\n                        className={classes.userField}\r\n                        label=\"Username\"\r\n                        color=\"secondary\"\r\n                        onChange={\r\n                            (e) => setUser(e.target.value)\r\n                        }\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <AccountBoxRoundedIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                            style: {\r\n                                fontSize: 24,\r\n                            },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style: { fontSize: 22 }\r\n                        }}\r\n                        required\r\n                        fullWidth\r\n                        error={userError}\r\n                    />\r\n                </Box>\r\n\r\n                <Box id=\"pass-input\" alignItems=\"center\" px={55}>\r\n                    <TextField\r\n                        className={classes.passwordField}\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        color=\"secondary\"\r\n                        onChange={\r\n                            (e) => setPass(e.target.value)\r\n                        }\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <VpnKeyRounded />\r\n                                </InputAdornment>\r\n                            ),\r\n                            style: {\r\n                                fontSize: 24,\r\n                            },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style: { fontSize: 22 }\r\n                        }}\r\n                        autoComplete=\"current-password\"\r\n                        required\r\n                        fullWidth\r\n                        error={passError}\r\n                    />\r\n                </Box>\r\n\r\n                <Grid id=\"login-button/signup\" container spacing={2} justify=\"center\">\r\n                    <Grid item alignContent='center'>\r\n                        <Button\r\n                            id=\"login\"\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            endIcon={<ArrowRightRoundedIcon fontSize='large' />}\r\n                            style={{ fontSize: 18, maxHeight: 30 }}\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item alignContent='center'>\r\n                        <Button\r\n                            id=\"signup\"\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            endIcon={<ArrowRightRoundedIcon fontSize='large' />}\r\n                            style={{ fontSize: 18, maxHeight: 30 }}\r\n                            onClick={() => navigate('/SignUp')}\r\n                        >\r\n                            New User?\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Box>\r\n\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}